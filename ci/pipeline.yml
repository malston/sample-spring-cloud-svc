---
groups:
- name: all
  jobs:
    - build-and-upload
    - build-api-compatibility-check
    - test-deploy
    - test-smoke
    - test-rollback-deploy
    - test-rollback-smoke
    - create-rc
    - build-and-upload-rc
    - stage-deploy
    - stage-e2e
    - create-final
    - build-and-upload-final
    - tag-final
    - bump-to-next-develop-version
    - merge-release-to-develop
    - prod-deploy
    - prod-complete
- name: development
  jobs:
    - build-and-upload
    - build-api-compatibility-check
    - test-deploy
    - test-smoke
    - test-rollback-deploy
    - test-rollback-smoke
- name: staging
  jobs:
    - create-rc
    - build-and-upload-rc
    - stage-deploy
    - stage-e2e
- name: production
  jobs:
    - create-final
    - build-and-upload-final
    - tag-final
    - bump-to-next-develop-version
    - merge-release-to-develop
    - prod-deploy
    - prod-complete

resources:
- name: repo-develop
  type: git
  source:
    uri: ((app-url))
    branch: develop
    private_key: ((github-private-key))
    ignore_paths:
      - ci

- name: repo-release
  type: git
  source:
    uri: ((app-url))
    branch: release
    private_key: ((github-private-key))
    ignore_paths:
      - ci

- name: repo-master
  type: git
  source:
    uri: ((app-url))
    branch: master
    private_key: ((github-private-key))
    ignore_paths:
      - ci

- name: version-snapshot
  type: git
  source:
    uri: ((app-url))
    branch: version-snapshot
    private_key: ((github-private-key))

- name: version
  type: semver
  source:
    uri: ((app-url))
    branch: version
    private_key: ((github-private-key))
    file: version
    driver: git
    initial_version: 1.0.0

- name: tools
  type: git
  source:
    uri: ((tools-scripts-url))
    branch: ((tools-branch))

- name: m2
  type: docker-image
  source:
    repository: springcloud/spring-pipeline-m2

jobs:
## develop pipeline
- name: build-and-upload
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: get-version  # Retrieve the project version for this build
    file: tools/get-version/task.yml
    params:
      GIT_EMAIL: ((git-email))
      GIT_NAME: ((git-name))
  - put: version       # Update the version if the project version changed
    resource: version-snapshot
    params:
      repository: updated-version
  - task: build-and-upload
    file: tools/tasks/build-and-upload/task.yml
    params:
      <<: *common-params

- name: build-api-compatibility-check
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      passed:
      - build-and-upload
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: build-api-compatibility-check
    file: tools/tasks/build-api-compatibility-check/task.yml
    params:
      <<: *common-params

- name: test-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      passed:
      - build-api-compatibility-check
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: test-deploy
    file: tools/tasks/test-deploy/task.yml
    params:
      <<: *common-params
      <<: *paas-test-params
      PAAS_HOSTNAME_UUID: ((paas-hostname-uuid))

- name: test-smoke
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      passed:
      - test-deploy
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: test-smoke
    file: tools/tasks/test-smoke/task.yml
    params:
      <<: *common-params
      <<: *paas-test-params

- name: test-rollback-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      passed:
      - test-smoke
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: test-rollback-deploy
    file: tools/tasks/test-rollback-deploy/task.yml
    params:
      <<: *common-params
      <<: *paas-test-params
      PAAS_HOSTNAME_UUID: ((paas-hostname-uuid))

- name: test-rollback-smoke
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-develop
      passed:
      - test-rollback-deploy
      trigger: true
    - get: m2
    - get: version
      resource: version-snapshot
  - task: test-rollback-smoke
    file: tools/tasks/test-rollback-smoke/task.yml
    params:
      <<: *common-params
      <<: *paas-test-params

## release pipeline
- name: create-rc
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: from-repo
      resource: repo-develop
      passed:
      - test-rollback-smoke
      trigger: false
    - get: to-repo
      resource: repo-release
  - task: merge-develop-to-release
    file: tools/tasks/merge-branch/task.yml
    params:
      GIT_EMAIL: ((git-email))
      GIT_NAME: ((git-name))
      SOURCE_BRANCH_NAME: develop
  - put: to-repo
    resource: repo-release
    params:
      repository: out

- name: build-and-upload-rc
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-release
      passed:
      - create-rc
      trigger: true
    - get: m2
    - get: version
      params: {pre: rc}
  - task: build-and-upload
    file: tools/tasks/build-and-upload/task.yml
    params:
      M2_REPO: ((maven-local-dir))
      <<: *common-params

- name: stage-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-release
      passed:
      - build-and-upload-rc
      trigger: true
    - get: m2
    - get: version
      params: {pre: rc}
  - task: stage-deploy
    file: tools/tasks/stage-deploy/task.yml
    params:
      <<: *common-params
      <<: *paas-stage-params
      PAAS_HOSTNAME_UUID: ((paas-hostname-uuid))

- name: stage-e2e
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-release
      passed:
      - stage-deploy
      trigger: true
    - get: m2
    - get: version
      params: {pre: rc}
  - task: stage-e2e
    file: tools/tasks/stage-e2e/task.yml
    params:
      <<: *common-params
      <<: *paas-stage-params

# master pipeline
- name: create-final
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: from-repo
      resource: repo-release
      passed:
      - stage-e2e
      trigger: false
    - get: to-repo
      resource: repo-master
  - task: merge-release-to-master
    file: tools/tasks/merge-branch/task.yml
    params:
      GIT_EMAIL: ((git-email))
      GIT_NAME: ((git-name))
      SOURCE_BRANCH_NAME: release
  - put: to-repo
    resource: repo-master
    params:
      repository: out

- name: build-and-upload-final
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-master
      passed:
        - create-final
      trigger: true
    - get: m2
    - get: version
      params: {bump: final}
  - task: build-and-upload
    file: tools/tasks/build-and-upload/task.yml
    params:
      M2_REPO: ((maven-local-dir))
      <<: *common-params

- name: tag-final
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-master
      passed:
        - build-and-upload-final
      trigger: true
    - get: m2
    - get: version
      params: {bump: final}
  - task: create-prod-tag
    file: tools/tasks/tag-repo/task.yml
    params:
      TAG_PREFIX: prod
      APPEND_TIMESTAMP: false
  - put: repo-master
    params:
      repository: out
      tag: out/tag
      only_tag: true

- name: bump-to-next-develop-version
  serial_groups:
    - version
  public: false
  plan:
    - aggregate:
      - get: tools
      - get: m2
      - get: repo-master
        passed:
          - tag-final
        trigger: true
      - get:  repo-release
      - get: version
        params: {bump: patch}
    - task: bump-to-next-develop-version
      file: tools/tasks/bump-to-next-develop-version/task.yml
      params:
        GIT_EMAIL: ((git-email))
        GIT_NAME: ((git-name))
    - put: repo
      resource: repo-release
      params:
        repository: out
    - put: version
      params: {file: version/number}

- name: merge-release-to-develop
  public: false
  plan:
    - aggregate:
      - get: tools
      - get: repo-master
        passed:
          - bump-to-next-develop-version
        trigger: true
      - get: to-repo
        resource: repo-develop
      - get: from-repo
        resource: repo-release
    - task: merge-release-to-develop
      file: tools/tasks/merge-branch/task.yml
      params:
        GIT_EMAIL: ((git-email))
        GIT_NAME: ((git-name))
        SOURCE_BRANCH_NAME: release
    - put: repo
      resource: repo-develop
      params:
        repository: out

- name: prod-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-master
      passed:
      - tag-final
      trigger: false
    - get: m2
    - get: version
  - task: prod-deploy
    file: tools/tasks/prod-deploy/task.yml
    params:
      <<: *common-params
      <<: *paas-prod-params
      PAAS_HOSTNAME_UUID: ((paas-hostname-uuid))

- name: prod-complete
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      resource: repo-master
      passed:
      - prod-deploy
      trigger: false
    - get: m2
    - get: version
  - task: prod-complete
    file: tools/tasks/prod-complete/task.yml
    params:
      <<: *common-params
      <<: *paas-prod-params

common-params: &common-params
  _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
  APP_MEMORY_LIMIT: ((app-memory-limit))
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  M2_REPO: ((maven-local-dir))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  PAAS_TYPE: ((paas-type))
  REPO_WITH_BINARIES: ((repo-with-binaries))
  REPO_WITH_SNAPSHOT_BINARIES: ((repo-with-snaphost-binaries))

paas-prod-params: &paas-prod-params
  PAAS_PROD_API_URL: ((paas-prod-api-url))
  PAAS_PROD_ORG: ((paas-prod-org))
  PAAS_PROD_PASSWORD: ((paas-prod-password))
  PAAS_PROD_SPACE: ((paas-prod-space))
  PAAS_PROD_USERNAME: ((paas-prod-username))

paas-stage-params: &paas-stage-params
  PAAS_STAGE_API_URL: ((paas-stage-api-url))
  PAAS_STAGE_ORG: ((paas-stage-org))
  PAAS_STAGE_PASSWORD: ((paas-stage-password))
  PAAS_STAGE_SPACE: ((paas-stage-space))
  PAAS_STAGE_USERNAME: ((paas-stage-username))

paas-test-params: &paas-test-params
  PAAS_TEST_API_URL: ((paas-test-api-url))
  PAAS_TEST_ORG: ((paas-test-org))
  PAAS_TEST_PASSWORD: ((paas-test-password))
  PAAS_TEST_SPACE: ((paas-test-space))
  PAAS_TEST_USERNAME: ((paas-test-username))
