---
resource_types:
  - name: artifactory-resource
    type: docker-image
    source:
      repository: springio/artifactory-resource
      tag: 0.0.1-SNAPSHOT

resources:
- name: repo
  type: git
  source:
    uri: ((app-url))
    branch: ((app-branch))
    private_key: ((github-private-key))

- name: artifactory
  type: artifactory-resource
  source:
    uri: ((artifactory-url))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))

- name: version
  type: git
  source:
    uri: ((app-url))
    branch: version-snapshot
    private_key: ((github-private-key))

- name: tools
  type: git
  source:
    uri: ((tools-scripts-url))
    branch: ((tools-branch))

- name: m2
  type: docker-image
  source:
    repository: springcloud/spring-pipeline-m2

jobs:
- name: build-and-upload
  serial: true
  public: false
  plan:
  - aggregate:
    - get: tools
    - get: repo
      trigger: true
    - get: m2
    - get: version
      resource: version
  - task: get-version
    file: tools/tasks/get-version/task.yml
    params:
      GIT_EMAIL: ((git-email))
      GIT_NAME: ((git-name))
  - put: version
    resource: version
    params:
      repository: updated-version
  - task: build
    file: repo/ci/tasks/build/task.yml
    params:
      <<: *common-params
  - put: artifactory
    params:
      repo: libs-snapshot-local
      build_number: ${BUILD_ID}
      folder: out
      # build_url: https://wings.concourse.ci/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}
      build_url: https://10.0.0.252:8080/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}

- name: test-deploy
  serial: true
  public: false
  plan:
  - aggregate:
    - get: artifactory
      passed:
      - build-and-upload
      trigger: true
    - get: tools
    - get: repo
    - get: m2
    - get: version
      resource: version
  - task: test-deploy
    file: tools/tasks/test-deploy/task.yml
    params:
      <<: *common-params
      <<: *paas-test-params
      PAAS_HOSTNAME_UUID: ((paas-hostname-uuid))

common-params: &common-params
  _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
  APP_MEMORY_LIMIT: ((app-memory-limit))
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  M2_REPO: ((maven-local-dir))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  PAAS_TYPE: ((paas-type))
  REPO_WITH_BINARIES: ((repo-with-binaries))
  REPO_WITH_SNAPSHOT_BINARIES: ((repo-with-snaphost-binaries))

paas-test-params: &paas-test-params
  PAAS_TEST_API_URL: ((paas-test-api-url))
  PAAS_TEST_ORG: ((paas-test-org))
  PAAS_TEST_PASSWORD: ((paas-test-password))
  PAAS_TEST_SPACE: ((paas-test-space))
  PAAS_TEST_USERNAME: ((paas-test-username))
